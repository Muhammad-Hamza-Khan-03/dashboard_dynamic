/* styles/node-resizer.css */

/* Ensure nodes transition smoothly */
.react-flow__node {
    transition: transform 0.1s ease;
  }
  
  /* Make selected nodes more visible */
  .react-flow__node.selected {
    z-index: 10 !important;
  }
  
  /* Style for node while being dragged */
  .node-dragging {
    opacity: 0.8;
    cursor: grabbing !important;
  }
  
  /* Style for node while being resized */
  .node-resizing {
    opacity: 0.8;
  }
  
  /* Make iframe content non-interactive during drag/resize */
  .node-dragging iframe,
  .node-resizing iframe {
    pointer-events: none !important;
  }
  
  /* Basic drag handle styling */
  .handle {
    cursor: grab;
  }
  .handle:active {
    cursor: grabbing;
  }
  
  /* Resize handle enhancements */
  .react-flow__resize-control.handle {
    opacity: 0;
    transition: opacity 0.3s, transform 0.2s;
  }
  
  /* Show resize handles on hover and when selected */
  .react-flow__node:hover .react-flow__resize-control.handle,
  .react-flow__node.selected .react-flow__resize-control.handle {
    opacity: 1;
  }
  
  /* Scale up handles on hover for better targeting */
  .react-flow__resize-control.handle:hover {
    transform: scale(1.2);
  }
  
  /* Custom cursor styles for each handle position */
  .react-flow__resize-control.handle-top {
    cursor: n-resize;
  }
  
  .react-flow__resize-control.handle-right {
    cursor: e-resize;
  }
  
  .react-flow__resize-control.handle-bottom {
    cursor: s-resize;
  }
  
  .react-flow__resize-control.handle-left {
    cursor: w-resize;
  }
  
  .react-flow__resize-control.handle-top.handle-right {
    cursor: ne-resize;
  }
  
  .react-flow__resize-control.handle-bottom.handle-right {
    cursor: se-resize;
  }
  
  .react-flow__resize-control.handle-bottom.handle-left {
    cursor: sw-resize;
  }
  
  .react-flow__resize-control.handle-top.handle-left {
    cursor: nw-resize;
  }
  
  /* Visual indicator during resize/drag operations */
  .chart-moving-indicator {
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgba(255, 255, 255, 0.7);
    z-index: 100;
    pointer-events: none;
    animation: pulse 2s infinite;
  }
  
  @keyframes pulse {
    0% { opacity: 0.7; }
    50% { opacity: 0.9; }
    100% { opacity: 0.7; }
  }

/* Custom CSS for enhancing the resize handles with arrow indicators */

/* Basic resize handle enhancements */
.react-flow__resize-control.handle {
  position: absolute;
  width: 14px !important;
  height: 14px !important;
  border-radius: 7px !important;
  background-color: var(--primary-color, #3b82f6) !important;
  border: 2px solid white !important;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1);
  opacity: 0.8;
  z-index: 10;
  transition: transform 0.2s, opacity 0.2s;
}

/* Hover state for handles */
.react-flow__resize-control.handle:hover {
  transform: scale(1.2);
  opacity: 1;
}

/* Add arrow indicators to each handle direction */
.react-flow__resize-control.handle::before,
.react-flow__resize-control.handle::after {
  content: '';
  position: absolute;
  background-color: white;
  width: 6px;
  height: 2px;
  top: 50%;
  left: 50%;
}

/* Arrow indicators for each direction */
/* Top handle */
.react-flow__resize-control.handle-top::before {
  transform: translate(-50%, -50%) rotate(-45deg) translate(-2px, 0);
}
.react-flow__resize-control.handle-top::after {
  transform: translate(-50%, -50%) rotate(45deg) translate(2px, 0);
}

/* Right handle */
.react-flow__resize-control.handle-right::before {
  transform: translate(-50%, -50%) rotate(-45deg) translate(0, -2px);
}
.react-flow__resize-control.handle-right::after {
  transform: translate(-50%, -50%) rotate(45deg) translate(0, 2px);
}

/* Bottom handle */
.react-flow__resize-control.handle-bottom::before {
  transform: translate(-50%, -50%) rotate(45deg) translate(-2px, 0);
}
.react-flow__resize-control.handle-bottom::after {
  transform: translate(-50%, -50%) rotate(-45deg) translate(2px, 0);
}

/* Left handle */
.react-flow__resize-control.handle-left::before {
  transform: translate(-50%, -50%) rotate(45deg) translate(0, -2px);
}
.react-flow__resize-control.handle-left::after {
  transform: translate(-50%, -50%) rotate(-45deg) translate(0, 2px);
}

/* Corner handles get diagonal arrows */
/* Top-right handle */
.react-flow__resize-control.handle-top.handle-right::before {
  transform: translate(-50%, -50%) rotate(-67.5deg) translate(-1px, -1px);
}
.react-flow__resize-control.handle-top.handle-right::after {
  transform: translate(-50%, -50%) rotate(22.5deg) translate(1px, 1px);
}

/* Bottom-right handle */
.react-flow__resize-control.handle-bottom.handle-right::before {
  transform: translate(-50%, -50%) rotate(-22.5deg) translate(-1px, 1px);
}
.react-flow__resize-control.handle-bottom.handle-right::after {
  transform: translate(-50%, -50%) rotate(67.5deg) translate(1px, -1px);
}

/* Bottom-left handle */
.react-flow__resize-control.handle-bottom.handle-left::before {
  transform: translate(-50%, -50%) rotate(22.5deg) translate(-1px, 1px);
}
.react-flow__resize-control.handle-bottom.handle-left::after {
  transform: translate(-50%, -50%) rotate(112.5deg) translate(1px, 1px);
}

/* Top-left handle */
.react-flow__resize-control.handle-top.handle-left::before {
  transform: translate(-50%, -50%) rotate(67.5deg) translate(-1px, -1px);
}
.react-flow__resize-control.handle-top.handle-left::after {
  transform: translate(-50%, -50%) rotate(157.5deg) translate(1px, -1px);
}

/* Selection outline enhancement */
.react-flow__node.selected {
  outline: 3px solid var(--primary-color, #3b82f6) !important;
  outline-offset: 2px !important;
  z-index: 10 !important;
}

/* Add animation to handles */
@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.1); }
  100% { transform: scale(1); }
}

.node-first-selected .react-flow__resize-control.handle {
  animation: pulse 1.5s ease-in-out infinite;
}

/* Add resize outline during resizing */
.node-resizing {
  outline: 3px dashed var(--primary-color, #3b82f6) !important;
  outline-offset: 2px !important;
  z-index: 10 !important;
}

.node-dragging {
  outline: 3px dashed var(--primary-color, #3b82f6) !important;
  outline-offset: 2px !important;
  opacity: 0.8;
  z-index: 10 !important;
}